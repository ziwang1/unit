# generated by maixhub, tested on maixpy3 v0.4.8
from maix import nn, camera, display, image
import serial 
import time

model = "/root/model-96968.awnn.mud"
labels =  ['kehuishou-shui', 'youhai-dian', 'youhai-he', '0', 'qita-cipian', 'chuyu-bai', 'kehuishou-yi', 'qita-eluanshi', 'qita-zhuangkuai', 'chuyu-hu', 'chuyu-tu', 'youhai-nei']


class Comm:
    def __init__(self, uart):
        self.uart = uart

    def send_classify_result(self, pmax, idx, label):
        msg = "{}:{:.2f}:{}\n".format(idx, pmax, label)
        self.uart.write(msg.encode())

def init_uart():
    uart = serial.Serial("/dev/ttyS1",9600)
    return uart


camera.config(size=(224, 224))

print("-- load model:", model)
m = nn.load(model)
print("-- load ok")

uart = init_uart()
comm = Comm(uart)
e_1=[0,0,0,0,0]

a_1=a_2=0#记录众数滤波的次数
def lvbo(c_1):
    global e_1,a_1,a_2

    if a_1<5:
        e_1[a_1]=c_1
        a_1=a_1+1
        #print("e_1",e_1)
    else:
        a_2=max(e_1, default='列表为空', key=lambda v: e_1.count(v))#滤波完毕是  a2#
        print("识别到的：",labels[a_2-1])
        a_1=0
        e_1=[0,0,0,0,0]
        if a_2==5  or a_2==8  or a_2==9:
            uart.write(b"2")             # 其他
            time.sleep(4)
        if a_2==2 or a_2==3 or a_2==12:
            uart.write(b"4")             # 有害
            time.sleep(4)
        if a_2==1 or a_2==7:
            uart.write(b"3")             # 可回收
            time.sleep(4)
        if a_2==6 or a_2==11 or a_2==12:
            uart.write(b"1")             # 厨余
            time.sleep(4)
while True:
        img = camera.capture()
        out = m.forward(img)
        out = nn.F.softmax(out)
        idx = out.argmax()
        p = out.max()
        msg = "{:.2f}: {}".format(p, labels[idx])
        lvbo(idx+1)
        if idx!=4:
            display.show(img.draw_string(2, 2, msg, scale = 1.2, color = (255, 0, 0), thickness = 2))
        else :
            display.show(img.draw_string(2, 2, "kong", scale = 3, color = (255, 0, 0), thickness = 2))
        #comm.send_classify_result(p, idx, labels[idx])